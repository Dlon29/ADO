<tr class="HomePageSections" id="G1_dirty_reads_header">
    <td>
        <table cellpadding="0" cellspacing="0" width="100%" border="0">
            <tr>
                <td colspan="2">                    
                    <a href="#" onclick="HideShowDetails(G1_dirty_reads_info, _src_img_g1_dirty_reads_info)">
                        <img border="0" name="_src_img_g1_dirty_reads_info" src="/lava/images/arrow-right-green.gif">&nbsp;
                        <b><asp:Label ID="lblG1DirtyReadsHeader" runat="server" Text="G1 Dirty Reads" ForeColor="Navy" /></b>
                    </a>
                </td>                    
            </tr>
        </table>
    </td>
</tr>

<Font class = "SectionLineHeader">File Upload Summary</Font>

FONT.SectionLineHeader
	{
		FONT-WEIGHT:600;
		FONT-SIZE: x-small;
		COLOR:Teal;
		FONT-FAMILY: ARIAL, HELVETICA;
		BACKGROUND-COLOR: transparent;
		TEXT-DECORATION: none
	}
	








private bool GetG1DirtyReadsInfo()
{
    Database clsDB = new Database();
    DataReader clsReader = new DataReader();
    DataSet objDS = new DataSet();
    string[] SqlCondition = new string[1] { "" };

    try
    {
        if (clsDB.Open() == false)
            return false;

        clsReader.Connection = clsDB.Connection;
        clsReader.StoredProcedure = SqlObjectsStaticClass.p_GetData_G1DirtyRead;
        if (clsReader.GetData(ref objDS, SqlObjects.p_GetData_G1DirtyRead, SqlCondition) == false)
            return false;

        grdG1DirtyReads.DataSource = objDS.Tables[0];
        grdG1DirtyReads.DataBind();

        // Check if the grid has any records and change the header accordingly
        if (grdG1DirtyReads.Items.Count == 0)
        {
            // No records, change the header text to 'G1 Dirty Reads' in navy
            lblG1DirtyReadsHeader.Text = "G1 Dirty Reads";
            lblG1DirtyReadsHeader.ForeColor = System.Drawing.Color.Navy;
        }
        else
        {
            // Records exist, change the header to 'Warning! G1 Dirty Reads' in red
            lblG1DirtyReadsHeader.Text = "Warning! G1 Dirty Reads";
            lblG1DirtyReadsHeader.ForeColor = System.Drawing.Color.Red;
        }
    }
    catch (Exception Exc)
    {
        _ErrorString = new StringBuilder();
        _ErrorString.Append(Exc.Message);
        _logger.Debug(string.Format(ErrorMessageToLog, ModuleName, MethodName, Exc));
        _show_error_row = string.Empty;
    }
    finally
    {
        clsReader.Dispose();
        clsDB.Dispose();
    }

    return true;
}





<tr class="HomePageSections" id="G1_dirty_reads_header">
    <td>
        <table cellpadding="0" cellspacing="0" width="100%" border="0">
            <tr>
                <td colspan="2">                    
                    <a href="#" onclick="HideShowDetails(G1_dirty_reads_info, _src_img_g1_dirty_reads_info)">
                        <img border="0" name="_src_img_g1_dirty_reads_info" src="/lava/images/arrow-right-green.gif">&nbsp;
                        <font id="lblG1DirtyReadsHeader" runat="server" class="SectionLineHeader">G1 Dirty Reads</font>
                    </a>
                </td>                    
            </tr>
        </table>
    </td>
</tr>






private bool GetG1DirtyReadsInfo()
{
    Database clsDB = new Database();
    DataReader clsReader = new DataReader();
    DataSet objDS = new DataSet();
    string[] SqlCondition = new string[1] { "" };

    try
    {
        if (clsDB.Open() == false)
            return false;

        clsReader.Connection = clsDB.Connection;
        clsReader.StoredProcedure = SqlObjectsStaticClass.p_GetData_G1DirtyRead;
        if (clsReader.GetData(ref objDS, SqlObjects.p_GetData_G1DirtyRead, SqlCondition) == false)
            return false;

        grdG1DirtyReads.DataSource = objDS.Tables[0];
        grdG1DirtyReads.DataBind();

        // Only change the header if there are records (i.e., when the count is greater than 0)
        if (grdG1DirtyReads.Items.Count > 0)
        {
            lblG1DirtyReadsHeader.Text = "Warning! G1 Dirty Reads";
            lblG1DirtyReadsHeader.Attributes["style"] = "color: red;";  // Apply red color for warning
        }

        // Otherwise, the header stays as "G1 Dirty Reads" with the default styling (SectionLineHeader)
        // No need for additional code, it will automatically keep the default styling
    }
    catch (Exception Exc)
    {
        _ErrorString = new StringBuilder();
        _ErrorString.Append(Exc.Message);
        _logger.Debug(string.Format(ErrorMessageToLog, ModuleName, MethodName, Exc));
        _show_error_row = string.Empty;
    }
    finally
    {
        clsReader.Dispose();
        clsDB.Dispose();
    }

    return true;
}



