IBMMQPublisher.cs

using System.Text.Json;

public Task Publish(Payload msg, CancellationToken ct)
{
    try
    {
        this.DisableIdleTimeout();
        Connect();

        string json = JsonSerializer.Serialize(msg);  // Serialize entire Payload
        MQMessage mqMessage = new MQMessage();
        mqMessage.CharacterSet = 1208; // UTF-8
        mqMessage.Encoding = 273;
        mqMessage.Write(Encoding.UTF8.GetBytes(json));

        if (!string.IsNullOrEmpty(msg.CorrelationId))
            mqMessage.CorrelationId = Encoding.UTF8.GetBytes(msg.CorrelationId);

        MQPutMessageOptions mqPutOptions = new MQPutMessageOptions();
        _queue.Put(mqMessage, mqPutOptions);

        _logger.LogInformation("Successfully published JSON message to {0}", _queueName);
        _logger.LogDebug("MessageBody : {0}", json);

        this.EnableIdleTimeout();
    }
    catch (Exception ex)
    {
        _logger.LogError(ex, "Unexpected error in IBMMQPublisher");
        throw;
    }
    return Task.CompletedTask;
}
